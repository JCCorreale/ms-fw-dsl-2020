System smartfridge

mqttBroker "localhost" : 1883    //192.168.1.18  192.168.43.229 

Context ctxFridge     ip [host="localhost" port=8095]  -mqtt

QActor resourcemodel context ctxFridge{
	
	State s0 initial {		  
		solve( consult("fridgeContent.pl")	 )
		solve( showFridgeContent )
//		run itunibo.coap.modelResourceCoap.create( myself, "resourcemodel" ) //CoAP access
	} 
//	Goto waitModelChange
	 
//	State waitModelChange{ }
//	Transition t0 whenMsg modelChange -> changeModel
//	              whenMsg modelUpdate -> updateModel
//
//	State updateModel{  
//		printCurrentMessage
//		onMsg( modelUpdate : modelUpdate(robot,V ) ) {
//			run itunibo.robot.resourceModelSupport.updateRobotModel( myself, payloadArg(1) )
//		}
//		onMsg( modelUpdate : modelUpdate(sonarRobot,V ) ) {
//			run itunibo.robot.resourceModelSupport.updateSonarRobotModel( myself, payloadArg(1) )
//		}
//		onMsg( modelUpdate : modelUpdate(roomMap,V ) ) {  //JULY19
//			println("modelUpdate roomMap  ")
//			run itunibo.robot.resourceModelSupport.updateRoomMapModel( myself, payloadArg(1) )
//		}
//	} 
//    Goto  waitModelChange
//    
//	State changeModel{  
//		//printCurrentMessage 
//		//ROBOT MOVE
//		onMsg( modelChange : modelChange( robot,V ) ) { // V= w | ...
//			run itunibo.robot.resourceModelSupport.updateRobotModel( myself, payloadArg(1) )
//			emit local_modelChanged : modelChanged(  robot,  $payloadArg(1))  //for the robotmind
//		} 
//		//SONAR DATA  
////		onMsg( modelChange : modelChange( sonarRobot,V ) ) { // V= w | ...
////			run itunibo.robot.resourceModelSupport.updateSonarRobotModel( myself, payloadArg(1) )
////		}
//	}  
//	Goto  waitModelChange
}