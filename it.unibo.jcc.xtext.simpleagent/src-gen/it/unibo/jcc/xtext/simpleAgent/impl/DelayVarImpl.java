/**
 * generated by Xtext 2.18.0.M3
 */
package it.unibo.jcc.xtext.simpleAgent.impl;

import it.unibo.jcc.xtext.simpleAgent.DelayVar;
import it.unibo.jcc.xtext.simpleAgent.SimpleAgentPackage;
import it.unibo.jcc.xtext.simpleAgent.Variable;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Delay Var</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.jcc.xtext.simpleAgent.impl.DelayVarImpl#getRefvar <em>Refvar</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DelayVarImpl extends DelayImpl implements DelayVar
{
  /**
   * The cached value of the '{@link #getRefvar() <em>Refvar</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefvar()
   * @generated
   * @ordered
   */
  protected Variable refvar;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DelayVarImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SimpleAgentPackage.Literals.DELAY_VAR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable getRefvar()
  {
    return refvar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRefvar(Variable newRefvar, NotificationChain msgs)
  {
    Variable oldRefvar = refvar;
    refvar = newRefvar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SimpleAgentPackage.DELAY_VAR__REFVAR, oldRefvar, newRefvar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRefvar(Variable newRefvar)
  {
    if (newRefvar != refvar)
    {
      NotificationChain msgs = null;
      if (refvar != null)
        msgs = ((InternalEObject)refvar).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SimpleAgentPackage.DELAY_VAR__REFVAR, null, msgs);
      if (newRefvar != null)
        msgs = ((InternalEObject)newRefvar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SimpleAgentPackage.DELAY_VAR__REFVAR, null, msgs);
      msgs = basicSetRefvar(newRefvar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimpleAgentPackage.DELAY_VAR__REFVAR, newRefvar, newRefvar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SimpleAgentPackage.DELAY_VAR__REFVAR:
        return basicSetRefvar(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SimpleAgentPackage.DELAY_VAR__REFVAR:
        return getRefvar();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SimpleAgentPackage.DELAY_VAR__REFVAR:
        setRefvar((Variable)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SimpleAgentPackage.DELAY_VAR__REFVAR:
        setRefvar((Variable)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SimpleAgentPackage.DELAY_VAR__REFVAR:
        return refvar != null;
    }
    return super.eIsSet(featureID);
  }

} //DelayVarImpl
