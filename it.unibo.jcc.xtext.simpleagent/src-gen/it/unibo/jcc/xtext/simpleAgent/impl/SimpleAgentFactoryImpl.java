/**
 * generated by Xtext 2.18.0.M3
 */
package it.unibo.jcc.xtext.simpleAgent.impl;

import it.unibo.jcc.xtext.simpleAgent.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SimpleAgentFactoryImpl extends EFactoryImpl implements SimpleAgentFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SimpleAgentFactory init()
  {
    try
    {
      SimpleAgentFactory theSimpleAgentFactory = (SimpleAgentFactory)EPackage.Registry.INSTANCE.getEFactory(SimpleAgentPackage.eNS_URI);
      if (theSimpleAgentFactory != null)
      {
        return theSimpleAgentFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SimpleAgentFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimpleAgentFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SimpleAgentPackage.SIMPLE_AGENT: return createSimpleAgent();
      case SimpleAgentPackage.QACTOR_SYSTEM_SPEC: return createQActorSystemSpec();
      case SimpleAgentPackage.BEHAVIOR_DECLARATION: return createBehaviorDeclaration();
      case SimpleAgentPackage.BEHAVIOR: return createBehavior();
      case SimpleAgentPackage.BEHAVIOR_EXTERNAL: return createBehaviorExternal();
      case SimpleAgentPackage.ACTION: return createAction();
      case SimpleAgentPackage.ON_EFFECT: return createOnEffect();
      case SimpleAgentPackage.COMPENSATION: return createCompensation();
      case SimpleAgentPackage.ACTION_BODY: return createActionBody();
      case SimpleAgentPackage.CODE_RUN_ARG: return createCodeRunArg();
      case SimpleAgentPackage.BROKER_SPEC: return createBrokerSpec();
      case SimpleAgentPackage.MESSAGE: return createMessage();
      case SimpleAgentPackage.OUT_ONLY_MESSAGE: return createOutOnlyMessage();
      case SimpleAgentPackage.OUT_IN_MESSAGE: return createOutInMessage();
      case SimpleAgentPackage.EVENT: return createEvent();
      case SimpleAgentPackage.SIGNAL: return createSignal();
      case SimpleAgentPackage.TOKEN: return createToken();
      case SimpleAgentPackage.DISPATCH: return createDispatch();
      case SimpleAgentPackage.REQUEST: return createRequest();
      case SimpleAgentPackage.INVITATION: return createInvitation();
      case SimpleAgentPackage.CONTEXT: return createContext();
      case SimpleAgentPackage.COMPONENT_IP: return createComponentIP();
      case SimpleAgentPackage.GUARDED_STATE_ACTION: return createGuardedStateAction();
      case SimpleAgentPackage.STATE_ACTION: return createStateAction();
      case SimpleAgentPackage.PRINT_CUR_MSG: return createPrintCurMsg();
      case SimpleAgentPackage.PRINT: return createPrint();
      case SimpleAgentPackage.SOLVE_GOAL: return createSolveGoal();
      case SimpleAgentPackage.FORWARD: return createForward();
      case SimpleAgentPackage.EMIT: return createEmit();
      case SimpleAgentPackage.DELAY: return createDelay();
      case SimpleAgentPackage.DELAY_INT: return createDelayInt();
      case SimpleAgentPackage.DELAY_VAR: return createDelayVar();
      case SimpleAgentPackage.DELAY_VREF: return createDelayVref();
      case SimpleAgentPackage.DELAY_SOL: return createDelaySol();
      case SimpleAgentPackage.MSG_COND: return createMsgCond();
      case SimpleAgentPackage.NO_MSG_COND: return createNoMsgCond();
      case SimpleAgentPackage.ANY_ACTION: return createAnyAction();
      case SimpleAgentPackage.CODE_RUN: return createCodeRun();
      case SimpleAgentPackage.CODE_RUN_ACTOR: return createCodeRunActor();
      case SimpleAgentPackage.CODE_RUN_SIMPLE: return createCodeRunSimple();
      case SimpleAgentPackage.EXEC: return createExec();
      case SimpleAgentPackage.PHEAD: return createPHead();
      case SimpleAgentPackage.PATOM: return createPAtom();
      case SimpleAgentPackage.PATOM_STRING: return createPAtomString();
      case SimpleAgentPackage.PATOMIC: return createPAtomic();
      case SimpleAgentPackage.PATOM_NUM: return createPAtomNum();
      case SimpleAgentPackage.PSTRUCT_REF: return createPStructRef();
      case SimpleAgentPackage.PSTRUCT: return createPStruct();
      case SimpleAgentPackage.VARIABLE: return createVariable();
      case SimpleAgentPackage.VAR_REF: return createVarRef();
      case SimpleAgentPackage.VAR_REF_IN_STR: return createVarRefInStr();
      case SimpleAgentPackage.VAR_SOL_REF: return createVarSolRef();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimpleAgent createSimpleAgent()
  {
    SimpleAgentImpl simpleAgent = new SimpleAgentImpl();
    return simpleAgent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QActorSystemSpec createQActorSystemSpec()
  {
    QActorSystemSpecImpl qActorSystemSpec = new QActorSystemSpecImpl();
    return qActorSystemSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BehaviorDeclaration createBehaviorDeclaration()
  {
    BehaviorDeclarationImpl behaviorDeclaration = new BehaviorDeclarationImpl();
    return behaviorDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Behavior createBehavior()
  {
    BehaviorImpl behavior = new BehaviorImpl();
    return behavior;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BehaviorExternal createBehaviorExternal()
  {
    BehaviorExternalImpl behaviorExternal = new BehaviorExternalImpl();
    return behaviorExternal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OnEffect createOnEffect()
  {
    OnEffectImpl onEffect = new OnEffectImpl();
    return onEffect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Compensation createCompensation()
  {
    CompensationImpl compensation = new CompensationImpl();
    return compensation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActionBody createActionBody()
  {
    ActionBodyImpl actionBody = new ActionBodyImpl();
    return actionBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CodeRunArg createCodeRunArg()
  {
    CodeRunArgImpl codeRunArg = new CodeRunArgImpl();
    return codeRunArg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BrokerSpec createBrokerSpec()
  {
    BrokerSpecImpl brokerSpec = new BrokerSpecImpl();
    return brokerSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Message createMessage()
  {
    MessageImpl message = new MessageImpl();
    return message;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OutOnlyMessage createOutOnlyMessage()
  {
    OutOnlyMessageImpl outOnlyMessage = new OutOnlyMessageImpl();
    return outOnlyMessage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OutInMessage createOutInMessage()
  {
    OutInMessageImpl outInMessage = new OutInMessageImpl();
    return outInMessage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event createEvent()
  {
    EventImpl event = new EventImpl();
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Signal createSignal()
  {
    SignalImpl signal = new SignalImpl();
    return signal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Token createToken()
  {
    TokenImpl token = new TokenImpl();
    return token;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Dispatch createDispatch()
  {
    DispatchImpl dispatch = new DispatchImpl();
    return dispatch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Request createRequest()
  {
    RequestImpl request = new RequestImpl();
    return request;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Invitation createInvitation()
  {
    InvitationImpl invitation = new InvitationImpl();
    return invitation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Context createContext()
  {
    ContextImpl context = new ContextImpl();
    return context;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComponentIP createComponentIP()
  {
    ComponentIPImpl componentIP = new ComponentIPImpl();
    return componentIP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GuardedStateAction createGuardedStateAction()
  {
    GuardedStateActionImpl guardedStateAction = new GuardedStateActionImpl();
    return guardedStateAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StateAction createStateAction()
  {
    StateActionImpl stateAction = new StateActionImpl();
    return stateAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrintCurMsg createPrintCurMsg()
  {
    PrintCurMsgImpl printCurMsg = new PrintCurMsgImpl();
    return printCurMsg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Print createPrint()
  {
    PrintImpl print = new PrintImpl();
    return print;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SolveGoal createSolveGoal()
  {
    SolveGoalImpl solveGoal = new SolveGoalImpl();
    return solveGoal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Forward createForward()
  {
    ForwardImpl forward = new ForwardImpl();
    return forward;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Emit createEmit()
  {
    EmitImpl emit = new EmitImpl();
    return emit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Delay createDelay()
  {
    DelayImpl delay = new DelayImpl();
    return delay;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DelayInt createDelayInt()
  {
    DelayIntImpl delayInt = new DelayIntImpl();
    return delayInt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DelayVar createDelayVar()
  {
    DelayVarImpl delayVar = new DelayVarImpl();
    return delayVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DelayVref createDelayVref()
  {
    DelayVrefImpl delayVref = new DelayVrefImpl();
    return delayVref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DelaySol createDelaySol()
  {
    DelaySolImpl delaySol = new DelaySolImpl();
    return delaySol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MsgCond createMsgCond()
  {
    MsgCondImpl msgCond = new MsgCondImpl();
    return msgCond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NoMsgCond createNoMsgCond()
  {
    NoMsgCondImpl noMsgCond = new NoMsgCondImpl();
    return noMsgCond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyAction createAnyAction()
  {
    AnyActionImpl anyAction = new AnyActionImpl();
    return anyAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CodeRun createCodeRun()
  {
    CodeRunImpl codeRun = new CodeRunImpl();
    return codeRun;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CodeRunActor createCodeRunActor()
  {
    CodeRunActorImpl codeRunActor = new CodeRunActorImpl();
    return codeRunActor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CodeRunSimple createCodeRunSimple()
  {
    CodeRunSimpleImpl codeRunSimple = new CodeRunSimpleImpl();
    return codeRunSimple;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Exec createExec()
  {
    ExecImpl exec = new ExecImpl();
    return exec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PHead createPHead()
  {
    PHeadImpl pHead = new PHeadImpl();
    return pHead;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtom createPAtom()
  {
    PAtomImpl pAtom = new PAtomImpl();
    return pAtom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomString createPAtomString()
  {
    PAtomStringImpl pAtomString = new PAtomStringImpl();
    return pAtomString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomic createPAtomic()
  {
    PAtomicImpl pAtomic = new PAtomicImpl();
    return pAtomic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomNum createPAtomNum()
  {
    PAtomNumImpl pAtomNum = new PAtomNumImpl();
    return pAtomNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PStructRef createPStructRef()
  {
    PStructRefImpl pStructRef = new PStructRefImpl();
    return pStructRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PStruct createPStruct()
  {
    PStructImpl pStruct = new PStructImpl();
    return pStruct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable createVariable()
  {
    VariableImpl variable = new VariableImpl();
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarRef createVarRef()
  {
    VarRefImpl varRef = new VarRefImpl();
    return varRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarRefInStr createVarRefInStr()
  {
    VarRefInStrImpl varRefInStr = new VarRefInStrImpl();
    return varRefInStr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarSolRef createVarSolRef()
  {
    VarSolRefImpl varSolRef = new VarSolRefImpl();
    return varSolRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimpleAgentPackage getSimpleAgentPackage()
  {
    return (SimpleAgentPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SimpleAgentPackage getPackage()
  {
    return SimpleAgentPackage.eINSTANCE;
  }

} //SimpleAgentFactoryImpl
